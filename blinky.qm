<?xml version="1.0" encoding="UTF-8"?>
<model version="5.0.0" links="1">
 <!--${qpcpp}-->
 <framework name="qpcpp"/>
 <!--${AOs}-->
 <package name="AOs" stereotype="0x02">
  <!--${AOs::Blinky}-->
  <class name="Blinky" superclass="qpcpp::QActive">
   <!--${AOs::Blinky::m_timeEvt}-->
   <attribute name="m_timeEvt" type="QP::QTimeEvt" visibility="0x02" properties="0x00"/>
   <!--${AOs::Blinky::cbOn}-->
   <attribute name="cbOn" type="std::function&lt; void(void) &gt;" visibility="0x02" properties="0x00"/>
   <!--${AOs::Blinky::cbOff}-->
   <attribute name="cbOff" type="std::function&lt; void(void) &gt;" visibility="0x02" properties="0x00"/>
   <!--${AOs::Blinky::m_bulb}-->
   <attribute name="m_bulb" type="std::unique_ptr&lt;Bulb&gt;" visibility="0x02" properties="0x00"/>
   <!--${AOs::Blinky::Blinky}-->
   <operation name="Blinky" type="" visibility="0x00" properties="0x00">
    <documentation>// constructor</documentation>
   </operation>
   <!--${AOs::Blinky::onInit}-->
   <operation name="onInit" type="void" visibility="0x02" properties="0x00">
    <documentation>// called on initilized</documentation>
   </operation>
   <!--${AOs::Blinky::onOff}-->
   <operation name="onOff" type="void" visibility="0x02" properties="0x00"/>
   <!--${AOs::Blinky::onOn}-->
   <operation name="onOn" type="void" visibility="0x02" properties="0x00"/>
   <!--${AOs::Blinky::isValid}-->
   <operation name="isValid" type="bool" visibility="0x02" properties="0x00">
    <documentation>// is m_bulb valid</documentation>
   </operation>
   <!--${AOs::Blinky::setBulb}-->
   <operation name="setBulb" type="void" visibility="0x00" properties="0x00">
    <documentation>// set m_bulb</documentation>
    <!--${AOs::Blinky::setBulb::bulb}-->
    <parameter name="bulb" type="std::unique_ptr&lt;Bulb&gt;"/>
   </operation>
   <!--${AOs::Blinky::resetBulb}-->
   <operation name="resetBulb" type="void" visibility="0x00" properties="0x00">
    <documentation>// reset m_bulb</documentation>
   </operation>
   <!--${AOs::Blinky::SM}-->
   <statechart properties="0x02">
    <!--${AOs::Blinky::SM::initial}-->
    <initial target="../1">
     <action>onInit();</action>
     <initial_glyph conn="2,2,5,1,20,8,-4">
      <action box="0,-2,32,6"/>
     </initial_glyph>
    </initial>
    <!--${AOs::Blinky::SM::off}-->
    <state name="off">
     <entry>onOff();</entry>
     <!--${AOs::Blinky::SM::off::TIMEOUT}-->
     <tran trig="TIMEOUT" target="../../2">
      <tran_glyph conn="2,16,3,1,18,8,-2">
       <action box="0,-2,8,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="2,8,16,10">
      <entry box="1,2,12,4"/>
     </state_glyph>
    </state>
    <!--${AOs::Blinky::SM::on}-->
    <state name="on">
     <entry>onOn();</entry>
     <!--${AOs::Blinky::SM::on::TIMEOUT}-->
     <tran trig="TIMEOUT" target="../../1">
      <tran_glyph conn="2,30,3,1,20,-17,-4">
       <action box="0,-2,8,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="2,22,16,10">
      <entry box="1,2,12,4"/>
     </state_glyph>
    </state>
    <state_diagram size="34,34"/>
   </statechart>
  </class>
 </package>
 <!--${generate}-->
 <directory name="generate">
  <!--${generate::blinky.hpp}-->
  <file name="blinky.hpp">
   <text>#include &lt;functional&gt;
#include &lt;memory&gt;

#include &quot;qpcpp.hpp&quot;

#include &quot;bulb.hpp&quot;

using namespace std;
using namespace QP;

enum BlinkySignals {
    TIMEOUT_SIG = Q_USER_SIG,
    MAX_SIG
};

$declare${AOs::Blinky}

extern Blinky * const AO_Blinky;</text>
  </file>
  <!--${generate::blinky.cpp}-->
  <file name="blinky.cpp">
   <text>#include &lt;iostream&gt;
#include &lt;stdlib.h&gt; // for exit()

#include &quot;blinky.hpp&quot;

using namespace std;
using namespace QP;

static Blinky l_blinky;
Blinky * const AO_Blinky = &amp;l_blinky;

//================ ask QM to define the Blinky class ==================
$define${AOs::Blinky}

</text>
  </file>
 </directory>
</model>
